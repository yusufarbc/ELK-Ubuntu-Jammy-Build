/*
 Example filters for Logstash. Place this file under logstash/pipeline/20-filters.conf
 Modify grok patterns and json parsing based on your input formats.
*/
filter {
  # Syslog grok
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{NUMBER:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{HOSTNAME:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      tag_on_failure => ["_grok_syslog_failure"]
    }
    date { match => ["syslog_timestamp","MMM dd HH:mm:ss","MMM  d HH:mm:ss"], timezone => "UTC" }
    mutate { rename => { "syslog_hostname" => "host.name" "syslog_program" => "process.name" } }
  }

  # Winlogbeat / JSON messages
  if [@metadata][beat] == "winlogbeat" or [event][module] == "windows" {
    # assume JSON structure from Winlogbeat; map fields to ECS where possible
    mutate { add_field => { "event.module" => "windows" } }
    if [winlog] {
      mutate { rename => { "[winlog][event_id]" => "[event][code]" } }
    }
  }

  # Kaspersky JSON (if message contains JSON)
  if [message] =~ "\{" {
    json { source => "message" target => "kaspersky" skip_on_invalid_json => true }
    if [kaspersky] {
      mutate { rename => { "[kaspersky][ComputerName]" => "[host][name]" } }
      mutate { add_field => { "event.module" => "kaspersky" "event.dataset" => "kaspersky.av" } }
    }
  }
}
