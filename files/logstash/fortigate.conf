###############################################################################
# FortiGate â†’ Logstash (Beats 5044) â†’ Elasticsearch (Data Stream: logs-fortigate-default)
###############################################################################
input {
  beats {
    host => "0.0.0.0"
    port => 5044
    add_tag => ["fortigate"]
  }
}

filter {
  if "fortigate" in [tags] {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} %{GREEDYDATA:fortigate_message}" }
      overwrite => [ "message" ]
      tag_on_failure => ["_fortigate_grok_failure"]
    }
    kv {
      source => "fortigate_message"
      field_split => " "
      value_split => "="
      trim_key => "<>\","
      trim_value => "<>\","
      include_brackets => false
    }
    date {
      match  => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
    mutate {
      rename => { "srcip"   => "[source][ip]" }
      rename => { "srcport" => "[source][port]" }
      rename => { "dstip"   => "[destination][ip]" }
      rename => { "dstport" => "[destination][port]" }
      rename => { "proto"   => "[network][transport]" }
      rename => { "action"  => "[event][action]" }
      add_field => { "[event][module]" => "fortigate" }
      add_field => { "[event][dataset]" => "fortigate" }
      add_tag => ["ecs_normalized"]
    }
  }
}

output {
  if "fortigate" in [tags] {
    elasticsearch {
      hosts                  => ["https://localhost:9200"]
      data_stream            => "true"
      data_stream_type       => "logs"
      data_stream_dataset    => "fortigate"
      data_stream_namespace  => "default"
      user                   => "logstash_ingest"
      password               => "${ES_PW}"
      ssl                    => true
      cacert                 => "/etc/elasticsearch/certs/ca.crt"
    }
    # stdout { codec => rubydebug }
  }
}