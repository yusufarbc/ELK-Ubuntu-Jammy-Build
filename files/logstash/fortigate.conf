###############################################################################
# FortiGate Logstash Pipeline
# - Beats input (örn. Filebeat/NXLog → Logstash:5044)
# - Grok + KV ile FortiGate syslog formatını parse et
# - SADECE fortigate etiketli olaylara uygula (karışmasın)
###############################################################################

input {
  beats {
    host => "0.0.0.0"
    port => 5044
    # Bu etiketi ekleyerek filtreleri koşula bağlayacağız
    add_tag => ["fortigate"]
  }
}

filter {
  if "fortigate" in [tags] {
    grok {
      match     => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} %{GREEDYDATA:fortigate_message}" }
      overwrite => [ "message" ]
      tag_on_failure => ["_fortigate_grok_failure"]
    }

    kv {
      source          => "fortigate_message"
      field_split     => " "
      value_split     => "="
      trim_key        => "<>\","
      trim_value      => "<>\","
      include_brackets => false
    }

    date {
      match  => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }

    mutate {
      rename => { "srcip"   => "[src][ip]" }
      rename => { "srcport" => "[src][port]" }
      rename => { "dstip"   => "[dst][ip]" }
      rename => { "dstport" => "[dst][port]" }
      rename => { "proto"   => "[network][transport]" }
      rename => { "action"  => "[event][action]" }
      add_tag => ["fortigate_parsed"]
    }
  }
}

output {
  if "fortigate" in [tags] {
    elasticsearch {
      hosts    => ["https://localhost:9200"]
      index    => "fortigate-logs-%{+YYYY.MM.dd}"
      user     => "logstash_ingest"
      password => "${ES_PW}"                       # Logstash keystore’dan
      ssl      => true
      cacert   => "/etc/elasticsearch/certs/ca.crt"
    }
    # stdout { codec => rubydebug }
  }
}