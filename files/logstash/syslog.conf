###############################################################################
# Linux & Ağ Cihazları Syslog (RFC3164) → Logstash:5514/tcp,udp
# Not: Logstash syslog input aynı anda TCP+UDP dinler. RFC5424 için grok ekledik.
# Data Stream: logs-syslog-default
###############################################################################
input {
  syslog {
    host => "0.0.0.0"
    port => 5514
  }
  # RFC5424 gönderen cihazlar için alternatif TCP giriş (etiketle)
  tcp {
    host => "0.0.0.0"
    port => 5515
    codec => line { charset => "UTF-8" }
    add_tag => ["rfc5424"]
  }
}

filter {
  if "rfc5424" in [tags] {
    # Basit RFC5424 grok (genel amaçlı)
    grok {
      match => {
        "message" => "<%{NONNEGINT:syslog.pri}>%{NONNEGINT:syslog.version} %{TIMESTAMP_ISO8601:@timestamp} %{HOSTNAME:host.hostname} %{NOTSPACE:app.name}(?: %{NOTSPACE:proc.pid})? %{NOTSPACE:msgid} %{DATA:syslog.structured_data} %{GREEDYDATA:message}"
      }
      overwrite => [ "message" ]
      tag_on_failure => ["_rfc5424_grok_fail"]
    }
  }

  mutate {
    add_field => { "[event][module]" => "syslog" }
    add_field => { "[event][dataset]" => "syslog" }
  }
  # RFC3164 tarih normalize (syslog input zaten çoğunu yapar):
  if ![event][original] { mutate { add_field => { "[event][original]" => "%{message}" } } }
}

output {
  elasticsearch {
    hosts                  => ["https://localhost:9200"]
    data_stream            => "true"
    data_stream_type       => "logs"
    data_stream_dataset    => "syslog"
    data_stream_namespace  => "default"
    user                   => "logstash_ingest"
    password               => "${ES_PW}"
    ssl                    => true
    cacert                 => "/etc/elasticsearch/certs/ca.crt"
  }
  # stdout { codec => rubydebug }
}