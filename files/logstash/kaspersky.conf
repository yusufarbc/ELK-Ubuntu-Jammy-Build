###############################################################################
# Kaspersky (KSC/Endpoint) → syslog (UDP/TCP 5516) veya JSON satırı
# - Syslog: RFC3164 benzeri → grok/kv ile ayrıştır
# - JSON: doğrudan parse
# Data Stream: logs-kaspersky-default
###############################################################################
input {
  udp { host => "0.0.0.0" port => 5516 buffer_size => 262144 }
  tcp { host => "0.0.0.0" port => 5516 codec => line { charset => "UTF-8" } }
}

filter {
  mutate {
    add_field => { "[event][module]" => "kaspersky" }
    add_field => { "[event][dataset]" => "kaspersky" }
  }

  if [message] =~ "^{.*}$" {
    json { source => "message" target => "kaspersky" }
    mutate {
      rename => { "[kaspersky][host]" => "[host][name]" }
      rename => { "[kaspersky][user]" => "[user][name]" }
      rename => { "[kaspersky][src_ip]" => "[source][ip]" }
      rename => { "[kaspersky][dst_ip]" => "[destination][ip]" }
      rename => { "[kaspersky][severity]" => "[event][severity]" }
      rename => { "[kaspersky][category]" => "[event][category]" }
      rename => { "[kaspersky][action]" => "[event][action]" }
    }
  } else {
    # Syslog tarzı satırlar: PRI TARIH HOST APP: key=value ...
    grok {
      match => { "message" => "(?:<%{NONNEGINT:syslog.pri}>)?%{SYSLOGTIMESTAMP:syslog.ts} %{HOSTNAME:host.name} %{DATA:app.name}: %{GREEDYDATA:kasp_msg}" }
      tag_on_failure => ["_kasp_grok_fail"]
    }
    kv {
      source => "kasp_msg"
      field_split => " "
      value_split => "="
    }
    mutate {
      rename => { "src_ip" => "[source][ip]" }
      rename => { "dst_ip" => "[destination][ip]" }
      rename => { "sev"    => "[event][severity]" }
      rename => { "cat"    => "[event][category]" }
      rename => { "act"    => "[event][action]" }
    }
    date { match => [ "syslog.ts", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ] target => "@timestamp" }
  }
}

output {
  elasticsearch {
    hosts                  => ["https://localhost:9200"]
    data_stream            => "true"
    data_stream_type       => "logs"
    data_stream_dataset    => "kaspersky"
    data_stream_namespace  => "default"
    user                   => "logstash_ingest"
    password               => "${ES_PW}"
    ssl                    => true
    cacert                 => "/etc/elasticsearch/certs/ca.crt"
  }
  # stdout { codec => rubydebug }
}